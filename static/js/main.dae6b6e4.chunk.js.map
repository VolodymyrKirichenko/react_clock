{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timer","this","setInterval","setState","window","console","info","toUTCString","slice","clearInterval","name","props","time","className","Component","getRandomName","value","now","toString","App","isClockVisible","clockName","timerId","toggleClockVisibility","currentState","_","prevState","debug","Paper","elevation","Box","sx","width","height","backgroundColor","Button","variant","background","onClick","ReactDOM","render","document","getElementById"],"mappings":"0OAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,MAA6B,KAL/B,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,MAAQE,aAAY,WACvB,EAAKC,SAAS,CAAEL,MAAO,IAAIC,OAE3BK,OAAOC,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MAC9D,OAZP,kCAeE,WACMP,KAAKD,OACPS,cAAcR,KAAKD,SAjBzB,oBAqBE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KAEFE,EADYX,KAAKJ,MAAfC,MACWS,cAAcC,OAAO,IAAK,GAE7C,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACIH,IAGH,YAED,sBAAMG,UAAU,cAAhB,SACID,WAnCZ,GAA2BE,aCD3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,gBAAgB,EAChBC,UAAW,WAHf,EAMEC,QAAU,EANZ,EA0BEC,sBAAwB,WACtB,EAAKpB,UAAS,SAACqB,GAAD,MAAmB,CAC/BJ,gBAAiBI,EAAaJ,oBA5BpC,uDAQE,WAAqB,IAAD,OAClBnB,KAAKqB,QAAUlB,OAAOF,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWN,QAC1B,QAXP,gCAcE,SAAmBU,EAAOC,GACxB,MAAsCzB,KAAKJ,MAAnCwB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,eAEfC,IAAcK,EAAUL,WAAaD,GACvChB,OAAOC,QAAQsB,MAAf,uBAAqCD,EAAUL,UAA/C,eAA+DA,MAlBrE,kCAsBE,WACEjB,OAAOK,cAAcR,KAAKqB,WAvB9B,oBAgCE,WACE,MAAsCrB,KAAKJ,MAAnCwB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,eAEnB,OACE,qBAAKP,UAAU,MAAf,SACE,cAACe,EAAA,EAAD,CAAOC,UAAW,GAAlB,SACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,aAJrB,SAOE,sBAAKrB,UAAU,eAAf,UACE,6CAECO,GAAkB,cAAC,EAAD,CAAOV,KAAMW,IAEhC,cAACc,EAAA,EAAD,CACEC,QAAQ,YACRL,GAAI,CACFC,MAAO,IACPK,WAAY,QAEdC,QAASrC,KAAKsB,sBANhB,sCAlDd,GAAyBT,aCjBzByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dae6b6e4.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timer: NodeJS.Timer | null = null;\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ today: new Date() });\n\n      window.console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n    const time = today.toUTCString().slice(-12, -4);\n\n    return (\n      <div className=\"clock\">\n        <strong className=\"clock__name\">\n          { name }\n        </strong>\n\n        {' time is '}\n\n        <span className=\"clock__time\">\n          { time }\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport {\n  Button,\n  Paper,\n  Box,\n} from '@mui/material';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: string;\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(_: {}, prevState: State) {\n    const { clockName, isClockVisible } = this.state;\n\n    if (clockName !== prevState.clockName && isClockVisible) {\n      window.console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  toggleClockVisibility = () => {\n    this.setState((currentState) => ({\n      isClockVisible: !currentState.isClockVisible,\n    }));\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Paper elevation={10}>\n          <Box\n            sx={{\n              width: 400,\n              height: 250,\n              backgroundColor: 'lightgrey',\n            }}\n          >\n            <div className=\"app__content\">\n              <h1>React clock</h1>\n\n              {isClockVisible && <Clock name={clockName} />}\n\n              <Button\n                variant=\"contained\"\n                sx={{\n                  width: 300,\n                  background: 'grey',\n                }}\n                onClick={this.toggleClockVisibility}\n              >\n                click on me\n              </Button>\n            </div>\n          </Box>\n        </Paper>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}